(NeuroSimTestbench (noname)) warning: no file for 'ExampleFileScript (noname)' specified
(DataSourceModule top::core0::datasource) warning: no dynamic power info
(DataSourceModule top::core0::datasource) warning: no static power info
(StateSRAM top::core0::state_sram) warning: no dynamic power info
(StateSRAM top::core0::state_sram) warning: no static power info
(DeltaSRAM top::core0::deltaG_sram) warning: no dynamic power info
(DeltaSRAM top::core0::deltaG_sram) warning: no static power info
(NBController top::core0::nb_controller) warning: no dynamic power info
(NBController top::core0::nb_controller) warning: no static power info
(DataSinkModule top::core0::ds_end) warning: no dynamic power info
(DataSinkModule top::core0::ds_end) warning: no static power info
(DataSinkModule top::core0::ds_idle) warning: no dynamic power info
(DataSinkModule top::core0::ds_idle) warning: no static power info
(DataEndptModule top::core0::de_d_waddr) warning: no dynamic power info
(DataEndptModule top::core0::de_d_waddr) warning: no static power info
(DataEndptModule top::core0::de_d_wdata) warning: no dynamic power info
(DataEndptModule top::core0::de_d_wdata) warning: no static power info
(Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in) warning: no dissipation power info
(Wire neuron_block.w_addr-state_sram.w_addr) warning: no dissipation power info
(Wire neuron_block.w_data-state_sram.w_data) warning: no dissipation power info
(FanoutWire nb_controller.sram-state_sram.r_addr) warning: no dissipation power info
(Wire state_sram.r_data-nb_controller.state) warning: no dissipation power info
(Wire deltaG_sram.r_data-nb_controller.deltaG) warning: no dissipation power info
(Wire datasource.dataout-nb_controller.tsparity) warning: no dissipation power info
(Wire nb_controller.end-ds_end.datain) warning: no dissipation power info
(Wire neuron_block.idle-ds_idle.datain) warning: no dissipation power info
(Wire de_d_waddr.dataend-deltaG_sram.w_addr) warning: no dissipation power info
(Wire de_d_wdata.dataend-deltaG_sram.w_data) warning: no dissipation power info
(DataSinkModule top::datasink) warning: no dynamic power info
(DataSinkModule top::datasink) warning: no static power info
(Wire neuron_block.NeuronBlock_out-datasink.datain) warning: no dissipation power info
(ExampleFileScript (noname)) warning: script file not loaded
Loading 'NeuroSimTestbench (noname)'..
debug: (src/Simulation/Simulator.cpp, line 56) find modules/pathways
total 10 module(s) found
debug: (src/Simulation/Simulator.cpp, line 85) DataSinkModule datasink
debug: (src/Simulation/Simulator.cpp, line 85) DataSourceModule datasource
debug: (src/Simulation/Simulator.cpp, line 85) NeuronBlockModule neuron_block
debug: (src/Simulation/Simulator.cpp, line 85) StateSRAM state_sram
debug: (src/Simulation/Simulator.cpp, line 85) DeltaSRAM deltaG_sram
debug: (src/Simulation/Simulator.cpp, line 85) NBController nb_controller
debug: (src/Simulation/Simulator.cpp, line 85) DataSinkModule ds_end
debug: (src/Simulation/Simulator.cpp, line 85) DataSinkModule ds_idle
debug: (src/Simulation/Simulator.cpp, line 85) DataEndptModule de_d_waddr
debug: (src/Simulation/Simulator.cpp, line 85) DataEndptModule de_d_wdata
debug: (src/Simulation/Simulator.cpp, line 88) load simulation spec
debug: (src/Simulation/Testbench.cpp, line 20) open simulation spec file
debug: (src/Simulation/Testbench.cpp, line 30) parse spec file
debug: (src/Simulation/Testbench.cpp, line 61) parameter (neuron_block <-- data/spike0.script)
debug: (src/Simulation/Testbench.cpp, line 61) parameter (main <-- 500)
debug: (src/Simulation/Testbench.cpp, line 61) parameter (neuron_block <-- 300)
debug: (src/Simulation/Testbench.cpp, line 61) parameter (neuron_block <-- 500)
debug: (src/Simulation/Simulator.cpp, line 95) init this->cdomains
total 1 clock domain(s) formed
debug: (src/Simulation/Simulator.cpp, line 153) init this->fscrs, this->regs
total 2 file script(s), 0 register(s) found
debug: (src/Simulation/Simulator.cpp, line 166) load file scripts
Loading 'NeuronBlockModule neuron_block' <-- 'data/spike0.script'..
Reading script 'data/spike0.script'..
debug: (src/Script/FileScript.cpp, line 34) open script file
debug: (src/Script/FileScript.cpp, line 47) parse/load script file
total 1 section(s), 1 instruction(s)
debug: (src/Simulation/Simulator.cpp, line 186) load register data
Checking testbench validity..
debug: (src/Simulation/Simulator.cpp, line 214) validate design
0 design error(s) and 31 design warning(s)
debug: (src/Simulation/Simulator.cpp, line 240) vaildate clocks
0 clock error(s)

< Design summary >
----------------------------------------------
 Specification                          Value 
----------------------------------------------
 Number of modules                         10 
 Clock frequency (MHz)         (main) 2.000000 
 Total SRAM size (KB)                     ??? 
 Total FF size (KB)                       ??? 
----------------------------------------------


Initializing clocks..
Starting simulation..
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 0 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 273) dataout is stalled (capacity 0)
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 273) NeuronBlock_out is stalled (capacity 0)
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 273) r_data is stalled (capacity 0)
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 273) r_data is stalled (capacity 0)
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 273) end is stalled (capacity 0)
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 273) dataend is stalled (capacity 0)
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 273) dataend is stalled (capacity 0)
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 1)
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 1)
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 1)
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 1)
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 1)
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 1)
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 1)
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 53) instruction received
debug: (src/Component/NeuronBlock.cpp, line 58) SPIKE TRACE - len 4 4
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message SignalMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 1000 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7be80
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7be80
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bba0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 50) [NBC] Receive TSParity. Reset NB controller
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 1500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7be50
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bed0
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 1)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 2000 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bdd0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 1th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c1e0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c1b0
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 2)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 2500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bc00
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 2th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c3a0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c340
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 3)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message SignalMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 3000 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bed0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 1
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7b9d0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 3th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bf60
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c280
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c4c0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c460
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 4)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c2e0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 0
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 3500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c1b0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 2
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bdd0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 4th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bba0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c400
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c2b0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c520
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 5)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 4000 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bed0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 3
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bc00
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 5th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c340
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7be80
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c430
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c4c0
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 6)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 4500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c1b0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 4
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7b9d0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 6th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c2e0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c310
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c370
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bf30
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 7)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 5000 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bed0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 5
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bdd0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 7th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c520
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c3d0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c210
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c3a0
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 8)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 5500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c1b0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 6
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bc00
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 8th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c4c0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c4f0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c280
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c460
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 9)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 6000 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bed0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 7
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7b9d0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 9th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bf30
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bf60
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c400
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c2b0
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 10)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 6500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c1b0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 8
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bdd0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 10th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c3a0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bba0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7be80
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c430
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 11)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 7000 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bed0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 9
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bc00
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 11th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c460
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c340
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c310
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c370
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 12)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Simulation/Simulator.cpp, line 291) advance clock
debug: (src/Simulation/Simulator.cpp, line 315) simulate 7500 ns
debug: (src/Simulation/Simulator.cpp, line 317) pre-clock modules
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::datasink'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSourceModule top::core0::datasource'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NeuronBlockModule top::core0::neuron_block'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'StateSRAM top::core0::state_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DeltaSRAM top::core0::deltaG_sram'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'NBController top::core0::nb_controller'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_end'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataSinkModule top::core0::ds_idle'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_waddr'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Module/Module.cpp, line 257) assign 'DataEndptModule top::core0::de_d_wdata'-->path
debug: (src/Module/Module.cpp, line 259) update stall state
debug: (src/Module/Module.cpp, line 290) assign module output to pathway
debug: (src/Simulation/Simulator.cpp, line 321) pre-clock pathways
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.NeuronBlock_out-datasink.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.neuron_block-neuron_block.NeuronBlock_in'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_addr-state_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.w_data-state_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'FanoutWire nb_controller.sram-state_sram.r_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 311) broadcast message
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire state_sram.r_data-nb_controller.state'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire deltaG_sram.r_data-nb_controller.deltaG'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 330) send message to specific RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire datasource.dataout-nb_controller.tsparity'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire nb_controller.end-ds_end.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire neuron_block.idle-ds_idle.datain'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_waddr.dataend-deltaG_sram.w_addr'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Pathway/Pathway.cpp, line 301) assign 'Wire de_d_wdata.dataend-deltaG_sram.w_data'-->module
debug: (src/Pathway/Pathway.cpp, line 303) push messages to RHS
debug: (src/Simulation/Simulator.cpp, line 325) post-clock modules
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::datasink' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c1b0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DataSinkModule.cpp, line 41) [Sink] val = 10
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSourceModule top::core0::datasource' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'NeuronBlockModule top::core0::neuron_block' (stall: 0)
debug: (src/Module/Module.cpp, line 334) prepare instruction
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7b9d0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NeuronBlock.cpp, line 77) [NB] Start 12th neuron dynamics
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'StateSRAM top::core0::state_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c2b0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c2e0
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/StateSRAM.cpp, line 41) [SRAM] Receive read request, and send message
debug: (src/Component/StateSRAM.cpp, line 51) [SRAM] Receive write request
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DeltaSRAM top::core0::deltaG_sram' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7bb70
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/DeltaSRAM.cpp, line 40) [SRAM] Receive read request, and send message
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'NBController top::core0::nb_controller' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c3d0
debug: (src/Module/Module.cpp, line 345) peaking message 0x1d7c210
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Component/NBController.cpp, line 57) [NBC] Receive state/delta message from SRAM
debug: (src/Component/NBController.cpp, line 61) [NBC] Initiate neuron block (Nidx: 13)
debug: (src/Component/NBController.cpp, line 72) [NBC] Read Reqest
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 407) ahead-of-time assign if LHS.capacity==0
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_end' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataSinkModule top::core0::ds_idle' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 345) peaking message (nil)
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_waddr' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Module/Module.cpp, line 327) calc 'DataEndptModule top::core0::de_d_wdata' (stall: 0)
debug: (src/Module/Module.cpp, line 338) peak messages from RHS
debug: (src/Module/Module.cpp, line 356) call operation
debug: (src/Module/Module.cpp, line 372) pop used messages from RHS
debug: (src/Module/Module.cpp, line 389) status check
debug: (src/Simulation/Simulator.cpp, line 329) post-clock pathways
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockOutMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message NeuronBlockIMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message IndexMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message StateMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 43) Assign new message DeltaGMessage

debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
debug: (src/Pathway/Pathway.cpp, line 357) update next ready state
debug: (src/Pathway/Pathway.cpp, line 369) flow messages in connection
debug: (src/Pathway/Pathway.cpp, line 372) push message from LHS to connection
debug: (src/Pathway/Pathway.cpp, line 402) set next target LHS id
debug: (src/Pathway/Pathway.cpp, line 408) activity check
Simulation finished at 7500 ns

< Simulation summary >
----------------------------------------------
 Result                                 Value 
----------------------------------------------
 Execution time (s)                  0.004500 
 Total SRAM read access                   ??? 
 Total SRAM write access                  ??? 
 Overall activity (%)                0.937500 
----------------------------------------------
 Simulation time (s)                 0.000001 
 Estimated energy (J)                 Unknown 
 Estimated power (W)                  Unknown 
----------------------------------------------


< Activity and Events >
------------------------------------------------------------------------------------------------------------------------
 Component Name                                          Activity (%)  Energy (mJ)   Power (mW)  Events 
------------------------------------------------------------------------------------------------------------------------
 [Component] NeuroSim top                                        0.94      Unknown      Unknown  stalled (0.700000 cycle(s) / module) 
   (Path) Wire neuron_block.NeuronBlock_out-datasink.datain     68.75      Unknown      Unknown   
   [Component] NeuroCore core0                                   1.16      Unknown      Unknown  stalled (0.777778 cycle(s) / module) 
     (Path) Wire nb_controller.neuron_block-neuron_block.Ne..   81.25      Unknown      Unknown   
     (Path) Wire neuron_block.w_addr-state_sram.w_addr          68.75      Unknown      Unknown   
     (Path) Wire neuron_block.w_data-state_sram.w_data          68.75      Unknown      Unknown   
     (Path) FanoutWire nb_controller.sram-state_sram.r_addr     93.75      Unknown      Unknown   
     (Path) Wire state_sram.r_data-nb_controller.state          87.50      Unknown      Unknown   
     (Path) Wire deltaG_sram.r_data-nb_controller.deltaG        87.50      Unknown      Unknown   
     (Path) Wire datasource.dataout-nb_controller.tsparity       6.25      Unknown      Unknown   
     (Path) Wire nb_controller.end-ds_end.datain                 0.00      Unknown      Unknown   
     (Path) Wire neuron_block.idle-ds_idle.datain                6.25      Unknown      Unknown   
     (Path) Wire de_d_waddr.dataend-deltaG_sram.w_addr           0.00      Unknown      Unknown   
     (Path) Wire de_d_wdata.dataend-deltaG_sram.w_data           0.00      Unknown      Unknown   
     [Module] DataSourceModule datasource                        0.00      Unknown      Unknown  stalled (1 cycle(s)) 
     [Module] NeuronBlockModule neuron_block                    93.75     0.000001     0.008333  stalled (1 cycle(s)) 
     [Module] StateSRAM state_sram                               0.00      Unknown      Unknown  stalled (1 cycle(s)) 
     [Module] DeltaSRAM deltaG_sram                              0.00      Unknown      Unknown  stalled (1 cycle(s)) 
     [Module] NBController nb_controller                         0.00      Unknown      Unknown  stalled (1 cycle(s)) 
     [Module] DataSinkModule ds_end                              0.00      Unknown      Unknown   
     [Module] DataSinkModule ds_idle                             0.00      Unknown      Unknown   
     [Module] DataEndptModule de_d_waddr                         0.00      Unknown      Unknown  stalled (1 cycle(s)) 
     [Module] DataEndptModule de_d_wdata                         0.00      Unknown      Unknown  stalled (1 cycle(s)) 
   [Module] DataSinkModule datasink                              0.00      Unknown      Unknown   
------------------------------------------------------------------------------------------------------------------------

Done.
